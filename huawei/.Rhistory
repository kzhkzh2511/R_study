R version 4.4.1 (2024-06-14 ucrt) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64
R
ls()
c
mp(a)
rm(a)
rm(b)
ls()
a
ls()
a=10
b=2
ls()
if(a==10) print('skan')
else if(a==10) print('ss')}
{if(a==1) print('skan')
else if(a==10) print('ss')}
else if(a==10) print('ss')}
q()
{
if(a==1) print('skan')
else if(a==10) print('ss')
}
for(i in 1:100){
if(i%2==0) print(i)
}
if(i%2==0) {print(i);next}
}
for(i in 1:100){
if(i%2==0) {print(i);next;}
}
for(i in 1:100){
if(i==2) {print(i);next;}
}
for(i in 1:100){
if(i==2) {print(i);next;}
ok=TRUE;tmp=as.integer(sqrt(i))+1
for(j in 2:tmp)
if(i%%j==0){ok=FALSE;break;}
if(ok) print(i)
}
c=0
for(i in 1:100){
c+=i
}
print(c)
c=0
for(i in 1:100){
c+=i;next;
}
print(c)
c=0
for(i in 1:100){
z=as.integer(sqrt(i))
c+=z;next;
}
print(c)
c=0
for(i in 1:100) c+=z
print(c)
c=0
for(i in 1:100) c+=i
print(c)
for(i in 1:100) c=c+i
print(c)
c=123
n=0
c=as.charctar(c)
c=123
n=0
c=as.charctor(c)
c=as.charcter(c)
c=123
n=0
c=as.chacter(c)
c=as.character(c)
c
c=unlist(strsplit(c,split=''))
c
c=123
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok")
c=1
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok")
c=1
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok") else ('no')
c=11
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok") else ('no')
for(j in 100:999){
c=j
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print(n)
}
2/3
func1(2)
func1=function(x){
return x*x
}
func1(2)
func1=function(x){
return(x*x)
}
func1(2)
func1(5)
ls()
func1
func2=function(x){
return(x*x+exp(-x*X))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*X))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,-1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(100000,1,3)
#5
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(1000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func(b1)*(b-a)/n
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func(b1)*rage/n
}
return(s)
}
func(100,1,3)
func
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func2(b1)*rage/n
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func2(b1)*rage/n
}
return(s)
}
func(10000,1,3)
func(100,1,3)
func(100000,1,3)
func(10000000,1,3)
q()
qf(0.5,n,n)
q()
dat=read.table("clipboard",header=FALSE)
head(dat,1)
colnames(dat)=c('t','freq','loss','waveform',1:1024)
newdat=read.table("clipboard",header=FALSE)
colnames(newdat)=c('t','freq','loss','waveform',1:1024)
dat <- rbind(dat, new_dat)
dat <- rbind(dat, newdat)
dim(dat)
newdat=read.table("clipboard",header=FALSE)
colnames(newdat)=c('t','freq','loss','waveform',1:1024)
dat <- rbind(dat, newdat)
newdat=read.table("clipboard",header=FALSE)
colnames(newdat)=c('t','freq','loss','waveform',1:1024)
dat <- rbind(dat, newdat)
dim(dat)
n_rows <- 3400 + 3000 + 3200 + 2800
type_vec <- rep(0, n_rows)
# 
head(dat)
colnames(dat)=c('t','loss','waveform',paste0('x',1:1024),'g')
head(dat)
colnames(dat)=c('t','freq','loss','waveform',paste0('x',1:1024),'g')
head(dat)
zbl=dat[,5:1028]
dim(zbl)
library(MASS)
ld=lda(dat$waveform~zbl,prior=c(1,1,1)/3)
class(zbl)
ld=lda(waveform~x1+x2+x3+..+x1024,prior=c(1,1,1)/3,dat)
ld=lda(waveform~x1+x2+x3+x1024,prior=c(1,1,1)/3,dat)
ld=lda(waveform~x1+x2+x3+x1024,prior=c(1,1,1)/3,dat[dat$g==1,])
ld
ld=lda(waveform~x1+x2+x3+...+x1024,prior=c(1,1,1)/3)
ld=lda(waveform~x1+x2+x3+...+x1024,prior=c(1,1,1)/3,dat)
formula_str <- paste("waveform ~ ", paste(paste0("x", 1:1024), collapse = " + "))
formula_obj <- as.formula(formula_str)
ld=lda(formula_obj,prior=c(1,1,1)/3,dat)
ld
Z=predict(ld)
table(g=dat$g,newg)
newg=Z$class
table(g=dat$g,newg)
table(g=dat$waveform,newg)
qd=qda(formula_obj,prior=c(1,1,1)/3,dat)
Z1=predict(qd)
newg1=Z1$class
table(g=dat$waveform,newg1)
qd
q()
