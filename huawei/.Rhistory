R version 4.4.1 (2024-06-14 ucrt) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64
R
ls()
c
mp(a)
rm(a)
rm(b)
ls()
a
ls()
a=10
b=2
ls()
if(a==10) print('skan')
else if(a==10) print('ss')}
{if(a==1) print('skan')
else if(a==10) print('ss')}
else if(a==10) print('ss')}
q()
{
if(a==1) print('skan')
else if(a==10) print('ss')
}
for(i in 1:100){
if(i%2==0) print(i)
}
if(i%2==0) {print(i);next}
}
for(i in 1:100){
if(i%2==0) {print(i);next;}
}
for(i in 1:100){
if(i==2) {print(i);next;}
}
for(i in 1:100){
if(i==2) {print(i);next;}
ok=TRUE;tmp=as.integer(sqrt(i))+1
for(j in 2:tmp)
if(i%%j==0){ok=FALSE;break;}
if(ok) print(i)
}
c=0
for(i in 1:100){
c+=i
}
print(c)
c=0
for(i in 1:100){
c+=i;next;
}
print(c)
c=0
for(i in 1:100){
z=as.integer(sqrt(i))
c+=z;next;
}
print(c)
c=0
for(i in 1:100) c+=z
print(c)
c=0
for(i in 1:100) c+=i
print(c)
for(i in 1:100) c=c+i
print(c)
c=123
n=0
c=as.charctar(c)
c=123
n=0
c=as.charctor(c)
c=as.charcter(c)
c=123
n=0
c=as.chacter(c)
c=as.character(c)
c
c=unlist(strsplit(c,split=''))
c
c=123
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok")
c=1
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok")
c=1
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok") else ('no')
c=11
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok") else ('no')
for(j in 100:999){
c=j
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print(n)
}
2/3
func1(2)
func1=function(x){
return x*x
}
func1(2)
func1=function(x){
return(x*x)
}
func1(2)
func1(5)
ls()
func1
func2=function(x){
return(x*x+exp(-x*X))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*X))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,-1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(100000,1,3)
#5
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(1000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func(b1)*(b-a)/n
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func(b1)*rage/n
}
return(s)
}
func(100,1,3)
func
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func2(b1)*rage/n
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func2(b1)*rage/n
}
return(s)
}
func(10000,1,3)
func(100,1,3)
func(100000,1,3)
func(10000000,1,3)
q()
qf(0.5,n,n)
q()
dat=read.table("clipboard",header=FALSE)
head(dat,1)
colnames(dat)=c('t','freq','loss','waveform',1:1024)
newdat=read.table("clipboard",header=FALSE)
colnames(newdat)=c('t','freq','loss','waveform',1:1024)
dat <- rbind(dat, new_dat)
dat <- rbind(dat, newdat)
dim(dat)
newdat=read.table("clipboard",header=FALSE)
colnames(newdat)=c('t','freq','loss','waveform',1:1024)
dat <- rbind(dat, newdat)
newdat=read.table("clipboard",header=FALSE)
colnames(newdat)=c('t','freq','loss','waveform',1:1024)
dat <- rbind(dat, newdat)
dim(dat)
n_rows <- 3400 + 3000 + 3200 + 2800
type_vec <- rep(0, n_rows)
# 
分
段
赋
值
type_vec[1:3400] <- 1
type_vec[(3400 + 1):(3400 + 3000)] <- 2
type_vec[(3400 + 3000 + 1):(3400 + 3000 + 3200)] <- 3
type_vec[(3400 + 3000 + 3200 + 1):n_rows] <- 4
dat$type <- type_vec
head(dat,1)
table(dat$type)
table(dat$t,dat$waveform)
table(dat[type==1]$t,dat$waveform)
table(dat[dat$type==1]$t,dat$waveform)
table(dat[dat$type==1,'t'],dat$waveform)
table(dat[dat$type==1,'t'],dat[dat$type==1,'waveform'])
for(i in 1:4) table(dat[dat$type==i,'t'],dat[dat$type==i,'waveform'])
for(i in 1:4) 
table(dat[dat$type==i,'t'],dat[dat$type==i,'waveform'])
table(dat[dat$type==1,'t'],dat[dat$type==1,'waveform'])
table(dat[dat$type==2,'t'],dat[dat$type==2,'waveform'])
table(dat[dat$type==3,'t'],dat[dat$type==3,'waveform'])
table(dat[dat$type==4,'t'],dat[dat$type==4,'waveform'])
table1=table(dat$t,dat$waveform)
prop.table(tablle1)
prop.table(table1)
prop.table(dat$waveform)
prop.table(table(dat$waveform))
table(dat$waveform,dat$loss)
boxplot(dat$loss~dat$type)
boxplot(dat$loss~dat$waveform)
boxplot(dat$loss~dat$waveform+dat$t)
boxplot(dat$loss~dat$waveform,dat$t)
boxplot(dat$loss~dat$waveform+dat$type)
boxplot(dat$loss~dat$waveform+dat$t)
prop.table(table(dat$waveform,dat$loss))
prop.table(table(dat$waveform,dat$t))
library(ggplot2)
q()
k=apply(dat[,5:1028,dat$type==1],1,kurtosis)
k=apply(dat[,5:1028,dat$type==1],1,kurtosi)
k=apply(dat[dat$type==1,5:1028],1,kurtosis)
library(e1071)
k=apply(dat[dat$type==1,5:1028],1,kurtosis)
dim(k)
k=apply(dat[dat$type==1,paste0(5:1028)],1,kurtosis)
k=apply(dat[dat$type==1,paste0(1:1024)],1,kurtosis)
dim(k)
head(k)
length(k)
mydat=data.frame(wave=dat[,4],k=k)
mydat=data.frame(waveform=dat[,4],k=k)
mydat=data.frame(waveform=dat[dat$type==1,4],k=k)
cols=c('正弦波'='black','三角波'='blue','梯形波'='green');
plot(mydat[,2],col=cols[mydat[,1]])
par=c(2,2)
par(c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,kurtosis)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,kurtosis)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,mean)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,mean)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,sd)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,var)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,meandian)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,median)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,Skewness)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
library(e1071)
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,Skewness)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
install.packages('e1071')
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,skewness)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,diff)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
k=apply(dat[dat$type==1,paste0(1:1024)],1,diff)
length(k)
dim(k)
head(k)
k=apply(dat[dat$type==i,paste0(1:1024)],1,var(diff))
dim(k)
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,diff)
k=apply(k,1,var)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
par(mfrow=c(2,2))
for(i in 1:4){
k=apply(dat[dat$type==i,paste0(1:1024)],1,diff)
k=apply(k,2,var)
mydat=data.frame(waveform=dat[dat$type==i,4],k=k)
plot(mydat[,2],col=cols[mydat[,1]])
}
q()
