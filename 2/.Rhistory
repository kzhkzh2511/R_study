z=as.integer(i);
s=s+z*z*z
}
if(s==n) print(n)
}
2/3
func1(2)
func1=function(x){
return x*x
}
func1(2)
func1=function(x){
return(x*x)
}
func1(2)
func1(5)
ls()
func1
func2=function(x){
return(x*x+exp(-x*X))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*X))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,-1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(100000,1,3)
#5
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(1000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func(b1)*(b-a)/n
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func(b1)*rage/n
}
return(s)
}
func(100,1,3)
func
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func2(b1)*rage/n
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func2(b1)*rage/n
}
return(s)
}
func(10000,1,3)
func(100,1,3)
func(100000,1,3)
func(10000000,1,3)
q()
qf(0.5,n,n)
q()
getwd()
as.logical(-1)
as.logical(0)
Inf/Inf
Inf>0
Inf>Inf
Inf>=Inf
Inf>=Inf*Inf
Inf>Inf*Inf
a=2
if(a%%2==0) print('
ggplot(x2[,1])
library(ggplot2)
ggplot(x2[,1])
x2[,1]
ggplot(x2[,1],aes(x=num,y=count))+geom_point()
ggplot(x2,aes(x=num,y=count))+geom_point()
ggplot(x2$1,aes(x=num,y=count))+geom_point()
x2$1
x2
head(x2)
hist(x1.mean2,col='blue',border='yellow',main='',xlab='')
hist(x1,col='blue',border='yellow',main='',xlab='')
hist(x1,col='blue',border='yellow',main='',xlab='')
hist(x2,col='blue',border='yellow',main='',xlab='')
hist(x1,col='blue',border='yellow',main='',xlab='')
par(mfrow=c(5,2))
for(i in 1:10) hist(x1[,i],col='blue',border='yellow',main='',xlab='')
for(i in 1:10) hist(x1[i,],col='blue',border='yellow',main='',xlab='')
par(mfrow=c(5,2))
for(i in 1:10) hist(x1[i,],col='blue',border='yellow',main='',xlab='')
par(mfrow=c(1,1))
 hist(x1[1,],col='blue',border='yellow',main='',xlab='')
 hist(x1[,1],col='blue',border='yellow',main='',xlab='')
for(i in 1:6) hist(x1[,1],col='blue',border='yellow',main='',xlab='')
head(x2)
par(mfrow=c(2,3))
for(i in 1:6) hist(x1[,1],col='blue',border='yellow',main='',xlab='')
par(mfrow=c(5,2))
for(i in 1:10) hist(x1[,1],col='blue',border='yellow',main='',xlab='')
for(i in 1:10) hist(x1[,1],col='blue',border='yellow',main='',xlab='')
par(mfrow=c(2,5))
for(i in 1:10) hist(x1[,1],col='blue',border='yellow',main='',xlab='')
dev.off
for(i in 1:10) hist(x1[,1],col='blue',border='yellow',main='',xlab='')
par(mfrow=c(2,5))
for(i in 1:10) hist(x1[,1],col='blue',border='yellow',main='',xlab='')
par(mfrow=c(2,5))
for(i in 1:10) hist(x1[,1],col='blue',border='yellow',main='',xlab='')
ggplot(data=x1, aes(x=Sepal.Width)) + 
  geom_histogram(binwidth=0.2, color="black", aes(fill=Species)) + 
  xlab("Sepal Width") + 
  ylab("Frequency") + 
  ggtitle("Histogram of Sepal Width")
ggplot(data=iris, aes(x=Sepal.Width)) + 
  geom_histogram(binwidth=0.2, color="black", aes(fill=Species)) + 
  xlab("Sepal Width") + 
  ylab("Frequency") + 
  ggtitle("Histogram of Sepal Width")
ggplot(data=x, aes(x=1)) + 
  geom_histogram(binwidth=0.2, color="black", aes(fill=Species)) + 
  xlab("Sepal Width") + 
  ylab("Frequency") + 
  ggtitle("Histogram of Sepal Width")
ggplot(data=x2, aes(x=1)) + 
  geom_histogram(binwidth=0.2, color="black", aes(fill=Species)) + 
  xlab("Sepal Width") + 
  ylab("Frequency") + 
  ggtitle("Histogram of Sepal Width")
ggplot(data=x2, aes(x=1)) + 
  geom_histogram(binwidth=0.2, color="black", aes(fill=1)) + 
  xlab("Sepal Width") + 
  ylab("Frequency") + 
  ggtitle("Histogram of Sepal Width")
x3=t(x1)
dim(x3)
x3.dat=as.data.frame(x3)
x3.dat$g=1:10
g=factor(x3.dat$g)
g
x3.dat$g=factor(x3.dat$g)
ggplot(data=x2,aes(x=g))
ggplot(data=x2,aes(g=g))
ggplot(data=x3.dat,aes(g=g))
ggplot(data=x3.dat,aes(x=g))
ggplot(data=x3.dat,aes(x=g))+geom_point()
ggplot(data=x3.dat,aes(x=g))+geom_point()+theme_classic()
help(ggplot)
ggplot(data=x3.dat, aes(x=g, fill =g)) + 
geom_bar() + 
  xlab("Species") +  
  ylab("Count") + 
  ggtitle("Bar plot of Sepal Length")
ggplot(data=x3.dat, aes(x=g, fill =g)) + 
geom_bar() + 
  xlab("Species") +  
  ylab("Count") + 
  ggtitle("Bar plot of Sepal Length")
ggplot(data=x2, ) + 
geom_bar() + 
  xlab("Species") +  
  ylab("Count") + 
  ggtitle("Bar plot of Sepal Length")
par(mfrow=c(2,5))
for(i in 1:10) hist(x1[,i],col='blue',border='yellow',main='',xlab='')
plot(x2)
boxplot(v1~g)
boxplot(x3.dat~g)
boxplot(x3.dat$V1~g)
boxplot(x3.dat$V1~g)
boxplot(x2.dat$1~g)
boxplot(x2.dat$1~g)
boxplot(x2$1~g)
boxplot(x2~g)
boxplot(x2[,1]~g)
boxplot(x2)
boxplot(x2)
x2$g=rep(1:10,each=20000,times=1)
x2$g=rep(1:10,each=1,times=20000)
dim(x2)
g=rep(1:10,each=20000,times=1)
class(x)
x.dat=as.data.frame()
x.dat=as.data.frame(x)
class(x.dat)
x.dat$g=rep(1:10,each=20000,times=1)
head(x.dat)
x.dat=as.data.frame(x1)
x.dat$g=rep(1:10,each=20000,times=1)
x.dat=as.data.frame(x)
x.dat=as.data.frame(x)
x.dat$g=rep(1:10,each=1,times=20000)
dim(x2)
head(x.dat)
boxplot(x.dat)
x.dat$g=factor(g)
fit=manova(x~g)
fit=manova(y~g)
fit=manova(y~x.dat$g)
fit=manova(x.dat$x~x.dat$g)
colnames(x.dat)=c(n,g)
colnames(x.dat)=c(n,m)
class(x.dat)
head(x.dat)
x.dat$g=rep(1:10,each=1,times=20000)
head(x.dat)
x.dat$g=factor(g)
head(x.dat)
x.dat$g=rep(1:10,each=1,times=20000)
x.dat$g=factor(x.dat$g)
head(x.dat)
fit=manova(x.dat$x~x.dat$g)
fit=manova(x~x.dat$g)
fit=manova(x~g)
dim(x.dat)
library(MASS)
fit=manova(x~g)
y=cbind(x)
fit=manova(x~g)
class(g)
g=factor(x.dat$g)
fit=manova(x~g)
class(g)
fit=manova(y~g)
y=cbind(x.dat$x)
fit=manova(y~g)
x3
summary(x)
summary(x1)
summary(x2)
summary(x2).sum
ks.test(x,"punif")
q()
