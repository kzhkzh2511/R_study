for(i in 1:100){
c+=i
}
print(c)
c=0
for(i in 1:100){
c+=i;next;
}
print(c)
c=0
for(i in 1:100){
z=as.integer(sqrt(i))
c+=z;next;
}
print(c)
c=0
for(i in 1:100) c+=z
print(c)
c=0
for(i in 1:100) c+=i
print(c)
for(i in 1:100) c=c+i
print(c)
c=123
n=0
c=as.charctar(c)
c=123
n=0
c=as.charctor(c)
c=as.charcter(c)
c=123
n=0
c=as.chacter(c)
c=as.character(c)
c
c=unlist(strsplit(c,split=''))
c
c=123
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok")
c=1
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok")
c=1
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok") else ('no')
c=11
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok") else ('no')
for(j in 100:999){
c=j
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print(n)
}
2/3
func1(2)
func1=function(x){
return x*x
}
func1(2)
func1=function(x){
return(x*x)
}
func1(2)
func1(5)
ls()
func1
func2=function(x){
return(x*x+exp(-x*X))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*X))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,-1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(100000,1,3)
#5
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(1000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func(b1)*(b-a)/n
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func(b1)*rage/n
}
return(s)
}
func(100,1,3)
func
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func2(b1)*rage/n
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func2(b1)*rage/n
}
return(s)
}
func(10000,1,3)
func(100,1,3)
func(100000,1,3)
func(10000000,1,3)
q()
qf(0.5,n,n)
q()
N=10000;x=rnif(N,0,5);y=rnif(N,0,10)
g <- function(x, y) x * y * exp(-x * y - x^2)
N=10000;x=runif(N,0,5);y=runif(N,0,10)
g <- function(x, y) x * y * exp(-x * y - x^2)
summary(g)
g <- function(x, y) return(x * y * exp(-x * y - x^2))
summary(g)
g
g <- function(x, y) {return(x * y * exp(-x * y - x^2))}
summary(g(x,y))
v=g(x,y)
dim(v)
length(v)
summary(v*10000)
v*N
mean(v)*N
MC1 <- function(n){
    k <- 0; x <- runif(n, 0, 5); y <- runif(n, 0, 10) #
从
已
知
概
率
分
布
中
抽
样
    for (i in 1:n){
        if (y[i] < f(x[i]))
            k <- k+1
    }
    k/n #
建
立
所
需
的
统
计
量
}
f <- function(x, y) {return(x * y * exp(-x * y - x^2))}
f <- function(x, y) {return(x * y * exp(-x * y - x^2))}
v=f(x,y)
summary(v)
install.packages("pracma")
library(pracma)
result <- integral2(f, 0, 5, 0, 10)
print(result)
summary(v)
mean(v)*50
 install.packages("pracma")
N=100000;x=runif(N,0,5);y=runif(N,0,10)
f <- function(x, y) {return(x * y * exp(-x * y - x^2))}
v=f(x,y)
summary(v)
mean(v)*50
-qchisq(0.025, 10)+qchisq(0.975,10)
for (i in 10:20) -qchisq(0.025, i)+qchisq(0.975,i)
for (i in 10:20) print(-qchisq(0.025, i)+qchisq(0.975,i))
for (i in 10:50) print(-qchisq(0.025, i)+qchisq(0.975,i))
x=rexp(100,2);y=rexp(100,1);mx=mean(x);my=mean(y)
pf(2*mx\my,1)
pf(2*mx/my,1)
p=0
for(i in 1:N)
{x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
if(2*mx/my>1) p=p+1
}
p=p/N
p
for(i in 1:10)
{x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
if(2*mx/my>1) print(p)
}
x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
mx
my
x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
mx
my
N=100000
x=rexp(N,2);y=rexp(N,1);
x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
mx
my
x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
mx
my
for(i in 1:10)
{x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
if((2*mx/my)>1) p=p+1
}
p
n=1000
for(i in 1:n)
{x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
if((2*mx/my)>1) p=p+1
}
p=p/N
p
for(i in 1:n)
{x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
if((2*mx/my)>1) p=p+1
}
p=p/n
p
for(i in 1:n)
{x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
if((2*mx/my)>1) p=p+1
}
p=p/n
p
for(i in 1:n)
{x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
if((2*mx/my)>1) p=p+1
}
p=p/n
p
for(i in 1:n)
{x1=sample(x,100);y1=sample(y,100);mx=mean(x1);my=mean(y1)
if((2*mx/my)>1) p=p+1
}
p=p/n
p
d=dist(x,method='euclidean')
x=c(11,15,21,31,35,40,9,28)
d=dist(x,method='euclidean')
d
hc=hclust(d,method='euclidean'); plot(hc,hang=-1,main='')
hc=hclust(d,method="ward.D"); plot(hc,hang=-1,main='')
methods=c("ward.D","ward.D2","single","complete","average","mcquitty","median","centroid")
for(i in 1:8){ hc=hclust(d,method=methods[i]); plot(hc,hang=-1,main='') }
op=par(mfrow=c(2,4))
for(i in 1:8){ hc=hclust(d,method=methods[i]); plot(hc,hang=-1,main='') }
x=c(11,15,21,31,35,40,9,28,25)
d=dist(x,method='euclidean')
op=par(mfrow=c(2,4))
methods=c("ward.D","ward.D2","single","complete","average","mcquitty","median","centroid")
for(i in 1:8){ hc=hclust(d,method=methods[i]); plot(hc,hang=-1,main='') }
for(i in 1:8){ hc=hclust(d,method=methods[i]); plot(hc,hang=-1,main='') }
hc=hclust(d,method=methods[3]); 
plot(hc,hang=-1,main='') 
hc=hclust(d,method=methods[3]); 
plot(hc,hang=-1) 
hc=hclust(d,method=methods[3]); 
plot(hc,hang=-2) 
plot(hc,hang=-1) 
rect.hclust(hc,k=2) 
rect.hclust(hc,k=3) 
rect.hclust(hc,k=4) 
plot(hc,hang=-1)
rect.hclust(hc,k=5) 
rect.hclust(hc,k=3) 
plot(hc,hang=-1)
rect.hclust(hc,k=3) 
x=c(-0.8,-0.5,0,0.5,2,2.4,2.7,2.97)
mean(x)
var(x)
help(var)
loglikelihood  =  function(lambda, data = e100) {
  sum(log(dpois(data, lambda)))
 }
max(-x)
max(1/3*x)
q()
x=rexp(10000,0.1)
median(x)
median(x)
summary(x)
x=rexp(100,0.1)
median(x)
summary(x)
r=c()
x=rexp(10000,0.1)
for(i in 1:1000)
{x1=sample(100,x)
r=c(r,median(x1))
r=sort(r)
}
for(i in 1:1000)
{x1=sample(100,x)
r=c(r,median(x1))
}
for(i in 1:1000)
{x1=sample(x,100)
r=c(r,median(x1))
}
r=sort(r)
r[25],r[975]
print(r[25],r[975])
print(r[25],',',r[975])
cbind(r[25],r[975])
x=rexp(100000,0.1)
r=c()
for(i in 1:10000)
{x1=sample(x,100)
r=c(r,median(x1))
}
r=sort(r)
cbind(r[25],r[975])
meadian(x)
median(x)
cbind(r[250],r[9750])
result=cbind(r[250],r[9750])
mean(result)
x=rnorm(100);y=rnorm(100,10,1)
summary(x)
summary(y)
summary((y-10)/1)
q()
