print("sjoaw")
a=oajso
a="aisja"
print(a)
clc
print(a)
a=33
print(a)
R version 4.4.1 (2024-06-14 ucrt) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64
R
ls()
c
mp(a)
rm(a)
rm(b)
ls()
a
ls()
a=10
b=2
ls()
if(a==10) print('skan')
else if(a==10) print('ss')}
{if(a==1) print('skan')
else if(a==10) print('ss')}
else if(a==10) print('ss')}
q()
{
if(a==1) print('skan')
else if(a==10) print('ss')
}
for(i in 1:100){
if(i%2==0) print(i)
}
if(i%2==0) {print(i);next}
}
for(i in 1:100){
if(i%2==0) {print(i);next;}
}
for(i in 1:100){
if(i==2) {print(i);next;}
}
for(i in 1:100){
if(i==2) {print(i);next;}
ok=TRUE;tmp=as.integer(sqrt(i))+1
for(j in 2:tmp)
if(i%%j==0){ok=FALSE;break;}
if(ok) print(i)
}
c=0
for(i in 1:100){
c+=i
}
print(c)
c=0
for(i in 1:100){
c+=i;next;
}
print(c)
c=0
for(i in 1:100){
z=as.integer(sqrt(i))
c+=z;next;
}
print(c)
c=0
for(i in 1:100) c+=z
print(c)
c=0
for(i in 1:100) c+=i
print(c)
for(i in 1:100) c=c+i
print(c)
c=123
n=0
c=as.charctar(c)
c=123
n=0
c=as.charctor(c)
c=as.charcter(c)
c=123
n=0
c=as.chacter(c)
c=as.character(c)
c
c=unlist(strsplit(c,split=''))
c
c=123
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok")
c=1
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok")
c=1
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok") else ('no')
c=11
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print("ok") else ('no')
for(j in 100:999){
c=j
n=c
c=as.character(c)
c=unlist(strsplit(c,split=''))
s=0
for(i in c){
z=as.integer(i);
s=s+z*z*z
}
if(s==n) print(n)
}
2/3
func1(2)
func1=function(x){
return x*x
}
func1(2)
func1=function(x){
return(x*x)
}
func1(2)
func1(5)
ls()
func1
func2=function(x){
return(x*x+exp(-x*X))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*X))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+rage*func2(b1)
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,-1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(b1)
}
func(100000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(100000,1,3)
#5
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(1000,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+b1
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func(b1)*(b-a)/n
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func(b1)*rage/n
}
return(s)
}
func(100,1,3)
func
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func2(b1)*rage/n
}
return(s)
}
func(100,1,3)
func2=function(x){
return(x*x+exp(-x*x))
}
func=function(n,a,b){
s=0
rage=b-a
for(i in 1:n){
b1=rage/n*(i+0.5)+a
s=s+func2(b1)*rage/n
}
return(s)
}
func(10000,1,3)
func(100,1,3)
func(100000,1,3)
func(10000000,1,3)
q()
qf(0.5,n,n)
q()
N=10000;  x=rexp(N,1); y=rexp(N,1)
zfun=function(x,y) exp(-x^2-y^2)/exp(-x-y)
mean(zfun(x,y))   #输出估计结果
#下面求解比较精确的结果
a=integrate(function(x) exp(-x^2),0,Inf)
a$value^2      
qualify=function(groups=10,n=100000)
{  avg=numeric(groups)
   for(i in 1: groups)
  { x=runif(n,1.909,2.091)
    x=x+1.0    #2，7之和
    x=x+runif(n,4.468,4.682);       x=x+runif(n,2.909,3.091)
    x=x+runif(n,0.898,1.102);      x=x+runif(n,12.9,13.1)
    x=x+runif(n,1.909,2.091)
    avg[i]=sum(x<=27)/n
  }  
  hist(x,main='Last simulation',xlab='overall thickness')
  list(groups = groups,each_n=n,each_mean=avg,total_mean=mean(avg))
}
qualify
qualify()
qualify=function(groups=10,n=100000)
{  t=c()
avg=numeric(groups)
   for(i in 1: groups)
  { x=runif(n,1.909,2.091)
    x=x+1.0    #2，7之和
    x=x+runif(n,4.468,4.682);       x=x+runif(n,2.909,3.091)
    x=x+runif(n,0.898,1.102);      x=x+runif(n,12.9,13.1)
    x=x+runif(n,1.909,2.091)
    avg[i]=sum(x<=27)/n
t=c(t,x)
  }  
  hist(x,main='Last simulation',xlab='overall thickness')
  list(groups = groups,each_n=n,each_mean=avg,total_mean=mean(avg))
return(mean(t))
}
qualify()
qualify=function(groups=10,n=100000)
{  t=c()
avg=numeric(groups)
   for(i in 1: groups)
  { x=runif(n,1.909,2.091)
    x=x+1.0    #2，7之和
    x=x+runif(n,4.468,4.682);       x=x+runif(n,2.909,3.091)
    x=x+runif(n,0.898,1.102);      x=x+runif(n,12.9,13.1)
    x=x+runif(n,1.909,2.091)
    avg[i]=sum(x<=27)/n
t=c(t,x)
  }  
  hist(x,main='Last simulation',xlab='overall thickness')
  list(groups = groups,each_n=n,each_mean=avg,total_mean=mean(avg))
return(mean(avg))
}
qualify()
coms=combn(50,5)          #耗时：1.74秒
com1=coms[,sample(ncol(coms),1000)]        #这个非常快
a=apply(com1,2,cfun) 
cfun=function(x) return(c(min(x),median(x),max(x)))
com1
cfun=function(x) return(c(min(x),median(x),max(x)))
a=comboSample(v=50,m=5,n=1000,seed=10,namedSample=TRUE,FUN=cfun)
a=matrix(unlist(a),nrow=1000,byrow=TRUE,dimnames=list(names(a)))
apply(a,2,mean)   
install.packages('RcppAlgos')
cfun=function(x) return(c(min(x),median(x),max(x)))
a=comboSample(v=50,m=5,n=1000,seed=10,namedSample=TRUE,FUN=cfun)
a=matrix(unlist(a),nrow=1000,byrow=TRUE,dimnames=list(names(a)))
apply(a,2,mean)   
library(RcppAlgos)
cfun=function(x) return(c(min(x),median(x),max(x)))
a=comboSample(v=50,m=5,n=1000,seed=10,namedSample=TRUE,FUN=cfun)
a=matrix(unlist(a),nrow=1000,byrow=TRUE,dimnames=list(names(a)))
apply(a,2,mean)   
q()
